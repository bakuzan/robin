@import '_variables.scss';
@import '_extensions.scss';
@import '_mixins.scss';

$columns: (
  one: 100%,
  two: 50%,
  three: 33%,
  four: 25%,
  five: 20%
);

.list {
  display: flex;
  flex-direction: row;
  width: calc(100% - 10px);
  padding: 5px;
  margin: 5px 0;
  list-style-type: none;
  .formatting-container {
    display: flex;
    width: 100%;
  }
  &--column {
    flex-direction: column;
    &:not(.list--column_one) {
      flex-flow: wrap;
    }
    @each $number, $percentage in $columns {
      &_#{$number} .list__item:not(.list__item--fixed-width) {
        flex: 1 1 $percentage;
      }
      &_#{$number} .list__item--fixed-width {
        flex: 0 0 $percentage;
      }
    }
  }
  &--wrap {
    flex-wrap: wrap;
  }
}
.list__item {
  position: relative;
  display: flex;
  justify-content: flex-start;
  padding: $app--padding;
  @extend %standard-border;
  box-sizing: border-box;
  &--no-padding {
    padding: 0;
  }
}
.list-count {
  font-size: 0.8em;
  opacity: 0.75;
  margin-left: 15px;
}
// Grid styles
.grid {
  display: grid;
  padding: 5px;
  margin: 5px 0;
  list-style-type: none;
}
@mixin gridColumnsForPercentage($value) {
  $percentage: $value * 1%;
  grid-template-columns: repeat(auto-fit, $percentage);
  grid-auto-rows: 1fr;
}
.series-grid {
  @include respond-to(xs) {
    @include gridColumnsForPercentage(50);
  }
  @include respond-to(sm) {
    @include gridColumnsForPercentage(33);
  }
  @include respond-to(md) {
    @include gridColumnsForPercentage(25);
  }
  @include respond-to(lg) {
    @include gridColumnsForPercentage(20);
  }
}

// List item overrides
.unbought-volumes__item {
  flex-direction: column;
  align-items: flex-start;
}
